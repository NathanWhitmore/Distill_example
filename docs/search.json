{
  "articles": [
    {
      "path": "about.html",
      "title": "About me",
      "description": "In your website you add a description here.",
      "author": [],
      "contents": "\r\nMy name is I’m Nathan, and I’m a conservation scientist and practitioner. If you want to get in touch feel free to do so through: https://nathanwhitmore.github.io/reproducible/contact.html\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-27T15:00:55+12:00"
    },
    {
      "path": "index.html",
      "title": "Making a distill website",
      "description": "How to make a distill website with RStudio and GitHub pages\n",
      "author": [
        {
          "name": {},
          "url": "https://nathanwhitmore.github.io/reproducible/"
        }
      ],
      "contents": "\r\n\r\nContents\r\nSynopsis\r\nGetting startedCreate repository\r\nCopy URL\r\nInstall distill package\r\nNew project via Version Control\r\nRender website\r\nBuild the website\r\nCommit changes to GitHub\r\nReturn to your GitHub repository\r\nGo to GitHub settings\r\n\r\nAdmire your website\r\nNext stepsAcknowledgments\r\nCode\r\n\r\n\r\nSynopsis\r\nAnyone can create a great technical website (that looks like this one) using program R, RStudio, the distill package, and GitHub pages. Furthermore, by using GitHub as our code repository we can ensure that our code is safe and reproducible. Thanks to GitHub, we can roll back changes if we ever damage our code. All of these tools: GitHub, RStudio, R and the distill package are free.\r\nIn the sections below I show how you can create a distill website with nothing more than a basic working knowledge of GitHub, RStudio, and R Markdown formatting. There are various alternate ways of creating a distill website but this is the version that works well for me. Indeed, this website was created from the code and the steps given below.\r\n\r\nGetting started\r\nIn order to get started you will need to be registered on GitHub and have RStudio and R installed on our computer. The distill package will also need to be installed (see https://rstudio.github.io/distill/website.html). For the purposes of this example I will assume you have some working knowledge of R and RStudio. The main code for the layout of the website will be written in R Markdown. If you are unfamiliar with R Markdown a good introduction can be found here https://rmarkdown.rstudio.com/.)\r\n\r\nCreate repository\r\nWe begin by creating a new GitHub repository, giving the project a description, a readme file, and a license. This basically creates a place on the internet for our files.\r\n\r\n\r\nCopy URL\r\nThe next step is to go to the green radio button and copy the URL. We will need pass this information to RStudio so it knows where to put the files when it exports to GitHub (a process known as a push).\r\n\r\n\r\nInstall distill package\r\nNow install the distill package in RStudio either via the Packages pane in RStudio or via the following code:\r\n\r\n\r\ninstall.packages(\"distill\")\r\n\r\n\r\n\r\n\r\nNew project via Version Control\r\nNext we create a new project in RStudio using the Version Control option. This allows us to link our GitHub URL to our RStudio project.\r\n\r\n\r\nChoose Git\r\n\r\n\r\nPaste URL\r\n\r\n\r\nRStudio now pulls the pre-existing files from your GitHub URL into your project folder. You will see the files appear in your environment pane.\r\n\r\n\r\nRender website\r\nNext we run the following code to create a website that can be displayed in RStudio (and later pushed to GitHub).\r\n\r\n\r\nlibrary(distill)\r\n\r\ncreate_website(dir = \".\", title = \"distill_example\", gh_pages = TRUE)\r\n\r\n\r\n\r\nThis will then create the files required for a simple website including a home and about tab.\r\n\r\nYou will then be presented with your index.Rmd (R Markdown) file which forms your website’s home page. The top portion of your R Markdown file, bounded by a line of dashes (---), contains the YAML script which defines the look of a particular page. This can be altered to customise some aspects of the page’s layout.\r\n\r\nClose the project\r\nNext close the project and reopen it.\r\n\r\nBuild the website\r\nA build tab (should now appear in the top right hand corner pane. Click on it. Click on it and your website be rendered by RStudio. If you open the build tab you will be presented with a hammer icon labeled Build Website. When you click on the icon on it your files will be formatted for website deployment and the website will be rendered in an RStudio window. If you fully open the window you will see an option in the top left hand side to Open the Website in your browser – this will give you a good indication of its final look.\r\n\r\n\r\nCommit changes to GitHub\r\nNow when we click on the Git tab up on the right hand side, we will see there a list is compiled of the the file changes we have made since we first pulled from GitHub. What we want to do is commit these changes to GitHub, which means that these changes will be implemented when we next push the changes to out repository. To do this we tick all the files we want updated (which is all of them) and then press the commit button.\r\n\r\nWe will then be asked to add a comment (which will help us track the changes we make). Now, it is important to know that nothing will update on the GitHub site until we press the push button. Once we press the push button we will see something like:\r\n\r\n\r\nReturn to your GitHub repository\r\nNow we return to our GitHub repository and check to see whether these changes have been made. This can take a couple of minutes.\r\n\r\n\r\nGo to GitHub settings\r\nSet source files\r\nThe next step is to go your repository’s GitHub settings and scroll down to GitHub pages (this may send you to a new page). There you will need to tell GitHub where your source files are located. Because of the way we have created the website these will be located on your main branch in your docs folder. Make this selection and then save.\r\n\r\nCopy the public URL\r\nNow that you have done that you will see highlighted text appears saying “Your site is ready to be published at…”.\r\n\r\nCopy the URL to your browser and hit enter.\r\n\r\nAdmire your website\r\nBe patient – it may take 10-15 minutes for your website to appear. Take time out to enjoy this little success. What you see should look something like:\r\n\r\nNext steps\r\nYou are now in a position to add more content to your website by amending your existing R Markdown pages (index.Rmd, which is your home page, or about.Rmd) or adding new ones. A great place to start on this journey is https://rstudio.github.io/distill/.\r\nAcknowledgments\r\nThis website would not be possible with out the tools made by RStudio especially the distill package (Allaire et al. 2018).\r\nCode\r\nThe final code used to render this page is available at https://github.com/NathanWhitmore/Distill_example\r\n\r\n\r\n\r\nAllaire, JJ, Rich Iannone, Alison Presmanes Hill, and Yihui Xie. 2018. “Distill for R Markdown.” https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-27T15:13:41+12:00"
    }
  ],
  "collections": []
}
