{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some generic information about me",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-25T14:00:39+12:00"
    },
    {
      "path": "index.html",
      "title": "Making a distill website",
      "description": "How to make a distill website with RStudio and GitHub pages\n",
      "author": [
        {
          "name": {},
          "url": "https://nathanwhitmore.github.io/reproducible/"
        }
      ],
      "contents": "\r\n\r\nContents\r\nSummary\r\nGetting startedCreate repository\r\nCopy URL\r\nInstall ‘distill’ package\r\nNew project via Version Control\r\nRender website\r\nBuild the website\r\nCommit changes to GitHub\r\nReturn to your GitHub repository\r\nGo to GitHub settings\r\n\r\nAdmire your website\r\nNext stepsAcknowledgments\r\n\r\n\r\nSummary\r\nWe can create great free reproducible websites using Rstudio, the distill package and GitHub pages. Furthermore, by using GitHub as our code repository we can ensure that our code is safe, and that we can roll back changes if we damage our code. There are a variety of ways to create a distill website but this is the one that works well for me.\r\nIndeed this website was created from the code and the steps given below.\r\n\r\nGetting started\r\nIn order to get started we will need to be registered on GitHub and have RStudio and R installed on our computer. The distill package will also need to be installed (see https://rstudio.github.io/distill/website.html).\r\nThe main code for the layout of the website will be written in Rmarkdown (a good introduction can be found here <https://rmarkdown.rstudio.com/.)\r\n\r\nCreate repository\r\nWe begin by creating a new GitHub repository, giving the project a description, a readme file, and a license. This basically creates a place on the internet for our files.\r\n\r\n\r\nCopy URL\r\nGo the green radio button and copy the URL. We will need pass this information to RStudio so it knows where to put the files.\r\n\r\n\r\nInstall ‘distill’ package\r\nInstall the ‘distill’ package in R either via the ‘Packages’ pane or via code\r\n\r\n\r\ninstall.packages(\"distill\")\r\n\r\n\r\n\r\n\r\nNew project via Version Control\r\nNext we create a new project using the ‘Version Control’ option. This allows us to link our GitHub URL to our RStudio project.\r\n\r\n\r\nChoose Git\r\n\r\n\r\nPaste URL\r\n\r\nRStudio now ‘pulls’ the pre-exising files from your GitHub URL into your project folder. You will see the files appear in your environment pane.\r\n\r\n\r\nRender website\r\nNext we run the following code to create a website that can be displayed on GitHub pages.\r\n\r\n\r\nlibrary(distill)\r\n\r\ncreate_website(dir = \".\", title = \"distill_example\", gh_pages = TRUE)\r\n\r\n\r\n\r\nThis will then render the files required for a simple website including a home and about tab.\r\n\r\nYou will then be presented with your index.Rmd (RMarkdown) file which forms your website’s home page. The top portion of your RMarkdown file, bounded by ‘—’’s is contains the YAML script which defines the look of a particular page. This can be altered to customise some aspects of its layout.\r\n\r\n\r\nClose the project\r\nNext close the project and reopen it.\r\n\r\nBuild the website\r\nA build tab should now appear in the top right hand corner pane. Click on it. On the left hand side you will see a hammer icon. Click on it and your website be rendered by RStudio. If you fully open the window you will see an option in the top right hand side to view the website in your browser. this will give a good indication of its final look.\r\n\r\n\r\nCommit changes to GitHub\r\nNow when we click on the Git tab up on the right hand side, we will see there a list is compiled of the the file changes we have made since we first ‘pulled’ from GitHub. What we want to do is ‘commit’ these changes to GitHUb, which means that these changes will be changed when we next ‘push’ the changes to out repository. To do this we tick all the files we want updated (which is all of them) and then press the commit button.\r\n\r\nWe will then we asked to add a comment (which will help us track the changes we make). Now, it is important to know that nothing will update on the GitHub site until we press the push button. Once we press the push button the window we see something like:\r\n\r\n\r\nReturn to your GitHub repository\r\nNow we return to our GitHub repository and check to see whether these changes have been made. This can take a couple of minutes.\r\n\r\n\r\nGo to GitHub settings\r\nSet source files\r\nThe next step is to go your repository’s GitHub settings and scroll down to GitHub pages (this may send you to a new page). There you will need to tell GitHub where your source files are located. Because of the way we have created the website these will be located on your main branch in your docs folder. Make this selection and then save.\r\n\r\nCopy the public URL\r\nNow that you have done that you will see highlighted text appears saying “Your site is ready to be published at…”.\r\n\r\n\r\nCopy the URL to your browser.\r\nAdmire your website\r\nBe patient – it may take 10-15 minutes for your website to appear. Take time out to enjoy this little success. What you see should look something like:\r\n\r\nNext steps\r\nYou are now in a position to add more content to your website by adding more text or graphics via RMarkdown.\r\nAcknowledgments\r\nThis website would not be possible with out the tools made by RStudio especially the ‘distill’ package by JJ Allaire and Rich Iannone and Alison {Presmanes Hill} and Yihui Xie.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-25T16:31:19+12:00"
    }
  ],
  "collections": []
}
